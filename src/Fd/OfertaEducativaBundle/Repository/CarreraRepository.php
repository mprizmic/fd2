<?php

namespace Fd\OfertaEducativaBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Fd\EstablecimientoBundle\Entity\Respuesta;
use Fd\OfertaEducativaBundle\Entity\OfertaEducativa;
use Fd\EstablecimientoBundle\Entity\UnidadOferta;
use Fd\TablaBundle\Entity\EstadoCarrera;
use Fd\OfertaEducativaBundle\Entity\CarreraEstadoValidez;

/**
 * CarreraRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarreraRepository extends EntityRepository {

    /**
     * dado un establecimeinto devuelve objetos de tipo carrera de las carreras del mismo
     * @return type resultados objetos carrera
     */
    public function findCarrerasPorEstablecimiento($establecimiento) {
        $dql = "select c
            from OfertaEducativaBundle:Carrera c 
            join c.oferta o 
            join o.unidades u 
            join u.unidades ue
            join ue.establecimiento e 
            where e.id = :establecimiento";
        $q = $this->_em->createQuery($dql);
        $q->setParameter('establecimiento', $establecimiento);
        return $q->getResult();
    }

    public function qbAllOrdenado($campo){
        return $this->createQueryBuilder('c')
                        ->orderBy('c.' . $campo);
    }
    public function qyAllOrdenado($campo) {
        return $this->qbAllOrdenado($campo)
                        ->getQuery();
    }

    public function qyResumido() {
        return $this->createQueryBuilder('c')
                        ->select(array(
                            'distinct c.nombre', 'f.codigo', 'c.id',
                        ))
                        ->innerJoin('c.estado', 'e')
                        ->innerJoin('c.formacion', 'f')
                        ->where('e.codigo = :codigo_estado')
                        ->groupBy('c.nombre')
                        ->orderBy('c.nombre')
                        ->setParameter('codigo_estado', 'ACT')
                        ->getQuery();
    }

    public function dqlActivas() {
        $x = $this->getEntityManager()->getReference('TablaBundle:EstadoCarrera', 1);
        $xx = $this->createQueryBuilder('c')
                ->where('c.estado = :estado');
        $xx->setParameter('estado', $x->getId());
        return $xx;
    }

    public function dqlActivasOrdenadas($campo) {
        return $this->dqlActivas()->orderBy('c.' . $campo);
    }

    public function qyActivasOrdenadas($campo) {
        return $this->dqlActivasOrdenadas($campo)->getQuery();
    }

    public function findActivasOrdenadas($campo) {
        return $this->qyActivasOrdenadas($campo)->getResult();
    }

    public function findAllOrdenado($campo) {
        return $this->qyAllOrdenado($campo)->getResult();
    }

    /**
     * devuelve las cohortes de cada carrera de cada establecimiento
     * SQL directo
     * DEPRECATED
     */
    public function sqlCohortesCarreras() {
        $sql = "
            select e.apodo as apodo, e.id as e_id, esp.nombre, esp.id as esp_id, co.anio, co.matricula, co.desgranamiento
            from Fd.establecimiento as e 
            inner join Fd.unidad_educativa as ue on e.id=ue.establecimiento_id
            inner join Fd.unidad_oferta as uo on uo.unidad_educativa_id=ue.id
            inner join Fd.nivel as n on n.id=ue.nivel_id
            inner join Fd.oferta_educativa as oe on oe.id=uo.oferta_educativa_id
            inner join Fd.especializacion as esp on uo.id=esp.oferta_educativa_id
            inner join Fd.cohorte as co on co.unidad_oferta_id=uo.id
            where n.abreviatura='Ter'
            order by e.orden, esp.nombre, co.anio";
        return $sql;
    }

    /**
     * Lista de carreras para un combo
     */
    public function combo($establecimiento = null) {
        if ($establecimiento) {
            return $this->findCarrerasPorEstablecimiento($establecimiento);
        };
        return $this->findAllOrdenado('nombre');
    }

}